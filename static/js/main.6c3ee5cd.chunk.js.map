{"version":3,"sources":["App.js","images/cardano-logo-1024x1024.png","index.js"],"names":["animationFrameId","ticker","maxQueue","window","innerWidth","frameCount","App","useState","symbol","price","timestamp","Date","now","coinPrices","setCoinPrices","canvasRef","useRef","useEffect","interval","setInterval","fetch","then","response","a","json","prev","length","shift","Number","toFixed","catch","error","console","clearInterval","canvas","current","width","height","innerHeight","ctx","getContext","strokeStyle","fillStyle","draw","maxPrice","minPrice","forEach","pulseRadius","Math","sin","getY","abs","clearRect","beginPath","arc","PI","fill","dataPointX","moveTo","lineTo","stroke","requestAnimationFrame","cancelAnimationFrame","className","src","logo","alt","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qJAKIA,E,6ECLW,MAA0B,mD,ODGnCC,EAAS,UACXC,EAAWC,OAAOC,WAElBC,EAAa,EA0GFC,MAxGf,WACE,MAAoCC,mBAAS,CAC3C,CAACC,OAAQP,EAAQQ,MAAO,EAAKC,UAAWC,KAAKC,SAD/C,mBAAOC,EAAP,KAAmBC,EAAnB,KAGMC,EAAYC,iBAAO,MAwFzB,OAtFAC,qBAAU,WACR,IAAMC,EAAWC,aACf,kBACEC,MAAM,sDAAD,OAAuDnB,IACzDoB,KADH,uCACQ,WAAOC,GAAP,mBAAAC,EAAA,sEAC0BD,EAASE,OADnC,gBACGhB,EADH,EACGA,OAAQC,EADX,EACWA,MACfK,GAAc,SAACW,GACb,KAAOA,EAAKC,QAAUxB,GAAUuB,EAAKE,QACrC,MAAM,GAAN,mBACKF,GADL,CAEE,CAACjB,SAAQC,MAAOmB,OAAOA,OAAOnB,GAAOoB,QAAQ,IAAKnB,UAAWC,KAAKC,YANlE,2CADR,uDAWGkB,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,QACpC,KAEF,OAAO,kBAAME,cAAcf,MAC1B,IAEHD,qBAAU,WAER,IAAMiB,EAASnB,EAAUoB,QACzBD,EAAOE,MAAQjC,OAAOC,WAAa,IACnC8B,EAAOG,OAASlC,OAAOmC,YAAc,IACrCpC,EAAWC,OAAOC,WAElB,IAAMmC,EAAML,EAAOM,WAAW,MAC9BD,EAAIE,YAAc,UAClBF,EAAIG,UAAY,YAEf,CAACvC,OAAOC,WAAYD,OAAOmC,cAE9BrB,qBAAU,WACR,IAAMiB,EAASnB,EAAUoB,QACnBI,EAAMxB,EAAUoB,QAAQK,WAAW,MA8CzC,OA5Ca,SAAPG,IACJtC,IACA,IAAIuC,EAAW,EACXC,EAAW,EACfhC,EAAWiC,SAAQ,YAAc,IAAZrC,EAAW,EAAXA,MACfA,EAAQmC,EACVA,EAAWnC,GACFA,EAAQoC,GAAyB,IAAbA,KAC7BA,EAAWpC,MAIf,IAAMsC,EAAc,WAAIC,KAAKC,IAAiB,IAAb5C,GAAsB,GACjD6C,EAAO,SAACzC,GAAD,OACXuC,KAAKG,IAAKjB,EAAOG,QAAUO,EAAWC,IAAcpC,EAAQoC,GAAYX,EAAOG,SAGjFE,EAAIa,UAAU,EAAG,EAAGb,EAAIL,OAAOE,MAAOG,EAAIL,OAAOG,QACjDE,EAAIc,YACJd,EAAIe,IACFzC,EAAWa,QAAUQ,EAAOE,MAAQF,EAAOE,MAAQW,EAAclC,EAAWa,OAAS,EACrFwB,EAAKrC,EAAWA,EAAWa,OAAS,GAAGjB,OACvCsC,EACA,EACA,EAAIC,KAAKO,IAEXhB,EAAIiB,OAGJjB,EAAIc,YACJxC,EAAWiC,SAAQ,WAAUW,GAAgB,IAAxBhD,EAAuB,EAAvBA,MACA,IAAfgD,EACFlB,EAAImB,OAAOD,EAAYP,EAAKzC,IAE5B8B,EAAIoB,OAAOF,EAAYP,EAAKzC,OAGhC8B,EAAIqB,SAEJ5D,EAAmBG,OAAO0D,sBAAsBlB,GAGlDA,GAEO,WACLxC,OAAO2D,qBAAqB9D,MAE7B,CAACa,IAGF,sBAAKkD,UAAU,eAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOH,UAAU,SACrC,uBAAMA,UAAU,QAAhB,cAA0BlD,EAAWA,EAAWa,OAAS,GAAGjB,YAG9D,wBAAQ0D,IAAKpD,QEtGnBqD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6c3ee5cd.chunk.js","sourcesContent":["import {useEffect, useRef, useState} from 'react'\nimport logo from './images/cardano-logo-1024x1024.png'\n\nconst ticker = 'ADABUSD'\nlet maxQueue = window.innerWidth\nlet animationFrameId\nlet frameCount = 0\n\nfunction App() {\n  const [coinPrices, setCoinPrices] = useState([\n    {symbol: ticker, price: 0.0, timestamp: Date.now()},\n  ])\n  const canvasRef = useRef(null)\n\n  useEffect(() => {\n    const interval = setInterval(\n      () =>\n        fetch(`https://www.binance.com/api/v3/ticker/price?symbol=${ticker}`)\n          .then(async (response) => {\n            const {symbol, price} = await response.json()\n            setCoinPrices((prev) => {\n              while (prev.length >= maxQueue) prev.shift()\n              return [\n                ...prev,\n                {symbol, price: Number(Number(price).toFixed(4)), timestamp: Date.now()},\n              ]\n            })\n          })\n          .catch((error) => console.error(error)),\n      1000,\n    )\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    // set width and height according to screen\n    const canvas = canvasRef.current\n    canvas.width = window.innerWidth - 100\n    canvas.height = window.innerHeight - 420\n    maxQueue = window.innerWidth\n    // set colors of canvas items\n    const ctx = canvas.getContext('2d')\n    ctx.strokeStyle = '#3564f6'\n    ctx.fillStyle = '#3564f6'\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [window.innerWidth, window.innerHeight])\n\n  useEffect(() => {\n    const canvas = canvasRef.current\n    const ctx = canvasRef.current.getContext('2d')\n\n    const draw = () => {\n      frameCount++\n      let maxPrice = 0\n      let minPrice = 0\n      coinPrices.forEach(({price}) => {\n        if (price > maxPrice) {\n          maxPrice = price\n        } else if (price < minPrice || minPrice === 0) {\n          minPrice = price\n        }\n      })\n\n      const pulseRadius = 7 * Math.sin(frameCount * 0.05) ** 2\n      const getY = (price) =>\n        Math.abs((canvas.height / (maxPrice - minPrice)) * (price - minPrice) - canvas.height)\n\n      // pulse dot\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n      ctx.beginPath()\n      ctx.arc(\n        coinPrices.length >= canvas.width ? canvas.width - pulseRadius : coinPrices.length - 1,\n        getY(coinPrices[coinPrices.length - 1].price),\n        pulseRadius,\n        0,\n        2 * Math.PI,\n      )\n      ctx.fill()\n\n      // graph lines\n      ctx.beginPath()\n      coinPrices.forEach(({price}, dataPointX) => {\n        if (dataPointX === 0) {\n          ctx.moveTo(dataPointX, getY(price))\n        } else {\n          ctx.lineTo(dataPointX, getY(price))\n        }\n      })\n      ctx.stroke()\n\n      animationFrameId = window.requestAnimationFrame(draw)\n    }\n\n    draw()\n\n    return () => {\n      window.cancelAnimationFrame(animationFrameId)\n    }\n  }, [coinPrices])\n\n  return (\n    <div className='app flex-col'>\n      <header className='ticker flex-col'>\n        <img src={logo} alt='logo' className='logo' />\n        <span className='price'>${coinPrices[coinPrices.length - 1].price}</span>\n      </header>\n\n      <canvas ref={canvasRef} />\n    </div>\n  )\n}\n\nexport default App\n","export default __webpack_public_path__ + \"static/media/cardano-logo-1024x1024.a528433f.png\";","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}